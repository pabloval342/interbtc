
//! Autogenerated weights for escrow
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-14, STEPS: `100`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `sander-dell`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kintsugi-dev"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --chain
// kintsugi-dev
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 100
// --repeat
// 10
// --output
// /tmp/weights/
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for escrow using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> escrow::WeightInfo for WeightInfo<T> {
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:54 w:1)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:52)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn create_lock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2081`
		//  Estimated: `165317`
		// Minimum execution time: 255_547_000 picoseconds.
		Weight::from_parts(262_245_000, 165317)
			.saturating_add(T::DbWeight::get().reads(66_u64))
			.saturating_add(T::DbWeight::get().writes(62_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:1 w:1)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:1)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn increase_amount() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3071`
		//  Estimated: `29631`
		// Minimum execution time: 120_933_000 picoseconds.
		Weight::from_parts(124_161_000, 29631)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:97 w:2)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:95)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn increase_unlock_height() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3001`
		//  Estimated: `270687`
		// Minimum execution time: 369_888_000 picoseconds.
		Weight::from_parts(385_857_000, 270687)
			.saturating_add(T::DbWeight::get().reads(108_u64))
			.saturating_add(T::DbWeight::get().writes(105_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:97 w:0)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:97)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:2)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3334`
		//  Estimated: `268235`
		// Minimum execution time: 360_232_000 picoseconds.
		Weight::from_parts(370_920_000, 268235)
			.saturating_add(T::DbWeight::get().reads(107_u64))
			.saturating_add(T::DbWeight::get().writes(107_u64))
	}
}