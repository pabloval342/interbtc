
//! Autogenerated weights for issue
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `enterprise`, CPU: `Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kintsugi-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// issue
// --extrinsic
// *
// --chain
// kintsugi-dev
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 50
// --repeat
// 20
// --output
// parachain/runtime/kintsugi/src/weights
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for issue using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> issue::WeightInfo for WeightInfo<T> {
	/// Storage: BTCRelay StartBlockHeight (r:1 w:0)
	/// Proof: BTCRelay StartBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof: Security ParachainStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Oracle Aggregate (r:2 w:0)
	/// Proof: Oracle Aggregate (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: Fee IssueGriefingCollateral (r:1 w:0)
	/// Proof: Fee IssueGriefingCollateral (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Issue IssueBtcDustValue (r:1 w:0)
	/// Proof: Issue IssueBtcDustValue (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: Some(54), added: 2529, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof: VaultStaking Nonce (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:0)
	/// Proof: VaultStaking TotalCurrentStake (max_values: None, max_size: Some(106), added: 2581, mode: MaxEncodedLen)
	/// Storage: Fee IssueFee (r:1 w:0)
	/// Proof: Fee IssueFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Security Nonce (r:1 w:1)
	/// Proof: Security Nonce (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: System ParentHash (r:1 w:0)
	/// Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: VaultRegistry VaultBitcoinPublicKey (r:1 w:0)
	/// Proof: VaultRegistry VaultBitcoinPublicKey (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Issue IssuePeriod (r:1 w:0)
	/// Proof: Issue IssuePeriod (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Issue IssueRequests (r:0 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	fn request_issue() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3572`
		//  Estimated: `26156`
		// Minimum execution time: 460_989_000 picoseconds.
		Weight::from_parts(468_230_000, 26156)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_issue_exact(h: u32, i: u32, _o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3435`
		//  Estimated: `20840`
		// Minimum execution time: 149_255_000 picoseconds.
		Weight::from_parts(152_953_936, 20840)
			// Standard Error: 89_955
			.saturating_add(Weight::from_parts(1_708_172, 0).saturating_mul(h.into()))
			// Standard Error: 81_018
			.saturating_add(Weight::from_parts(63_534, 0).saturating_mul(i.into()))
			// Standard Error: 380
			.saturating_add(Weight::from_parts(3_250, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: Some(54), added: 2529, mode: MaxEncodedLen)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof: Security ParachainStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Oracle Aggregate (r:1 w:0)
	/// Proof: Oracle Aggregate (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof: VaultStaking Nonce (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:0)
	/// Proof: VaultStaking TotalCurrentStake (max_values: None, max_size: Some(106), added: 2581, mode: MaxEncodedLen)
	/// Storage: Fee IssueFee (r:1 w:0)
	/// Proof: Fee IssueFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_issue_overpayment(h: u32, i: u32, o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4257`
		//  Estimated: `32025`
		// Minimum execution time: 217_296_000 picoseconds.
		Weight::from_parts(195_953_975, 32025)
			// Standard Error: 28_130
			.saturating_add(Weight::from_parts(1_122_551, 0).saturating_mul(h.into()))
			// Standard Error: 25_335
			.saturating_add(Weight::from_parts(1_184_132, 0).saturating_mul(i.into()))
			// Standard Error: 25_335
			.saturating_add(Weight::from_parts(417_466, 0).saturating_mul(o.into()))
			// Standard Error: 118
			.saturating_add(Weight::from_parts(4_320, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: Fee IssueFee (r:1 w:0)
	/// Proof: Fee IssueFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_issue_underpayment(h: u32, i: u32, o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3688`
		//  Estimated: `21351`
		// Minimum execution time: 168_568_000 picoseconds.
		Weight::from_parts(147_065_905, 21351)
			// Standard Error: 26_392
			.saturating_add(Weight::from_parts(1_161_649, 0).saturating_mul(h.into()))
			// Standard Error: 23_770
			.saturating_add(Weight::from_parts(1_181_112, 0).saturating_mul(i.into()))
			// Standard Error: 23_770
			.saturating_add(Weight::from_parts(303_289, 0).saturating_mul(o.into()))
			// Standard Error: 111
			.saturating_add(Weight::from_parts(4_244, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_expired_issue_exact(h: u32, i: u32, o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4376 + i * (13 ±0)`
		//  Estimated: `20840`
		// Minimum execution time: 154_962_000 picoseconds.
		Weight::from_parts(135_369_605, 20840)
			// Standard Error: 22_015
			.saturating_add(Weight::from_parts(1_344_925, 0).saturating_mul(h.into()))
			// Standard Error: 19_828
			.saturating_add(Weight::from_parts(1_006_106, 0).saturating_mul(i.into()))
			// Standard Error: 19_828
			.saturating_add(Weight::from_parts(252_928, 0).saturating_mul(o.into()))
			// Standard Error: 93
			.saturating_add(Weight::from_parts(4_375, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: VaultRegistry SecureCollateralThreshold (r:1 w:0)
	/// Proof: VaultRegistry SecureCollateralThreshold (max_values: None, max_size: Some(54), added: 2529, mode: MaxEncodedLen)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof: Security ParachainStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Oracle Aggregate (r:1 w:0)
	/// Proof: Oracle Aggregate (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: VaultStaking Nonce (r:1 w:0)
	/// Proof: VaultStaking Nonce (max_values: None, max_size: Some(74), added: 2549, mode: MaxEncodedLen)
	/// Storage: VaultStaking TotalCurrentStake (r:1 w:0)
	/// Proof: VaultStaking TotalCurrentStake (max_values: None, max_size: Some(106), added: 2581, mode: MaxEncodedLen)
	/// Storage: Fee IssueFee (r:1 w:0)
	/// Proof: Fee IssueFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_expired_issue_overpayment(h: u32, i: u32, o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5366`
		//  Estimated: `32025`
		// Minimum execution time: 228_385_000 picoseconds.
		Weight::from_parts(205_649_397, 32025)
			// Standard Error: 24_527
			.saturating_add(Weight::from_parts(1_353_949, 0).saturating_mul(h.into()))
			// Standard Error: 22_090
			.saturating_add(Weight::from_parts(1_151_803, 0).saturating_mul(i.into()))
			// Standard Error: 22_090
			.saturating_add(Weight::from_parts(384_410, 0).saturating_mul(o.into()))
			// Standard Error: 103
			.saturating_add(Weight::from_parts(4_916, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: BTCRelay DisableInclusionCheck (r:1 w:0)
	/// Proof: BTCRelay DisableInclusionCheck (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay Chains (r:1 w:0)
	/// Proof: BTCRelay Chains (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BlockHeaders (r:1 w:0)
	/// Proof: BTCRelay BlockHeaders (max_values: None, max_size: Some(200), added: 2675, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableBitcoinConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableBitcoinConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay StableParachainConfirmations (r:1 w:0)
	/// Proof: BTCRelay StableParachainConfirmations (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	/// Storage: Fee IssueFee (r:1 w:0)
	/// Proof: Fee IssueFee (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `h` is `[2, 10]`.
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	/// The range of component `b` is `[1, 2048]`.
	fn execute_expired_issue_underpayment(h: u32, i: u32, o: u32, b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4441 + h * (7 ±0) + i * (9 ±0)`
		//  Estimated: `21351`
		// Minimum execution time: 179_095_000 picoseconds.
		Weight::from_parts(157_653_295, 21351)
			// Standard Error: 24_085
			.saturating_add(Weight::from_parts(1_438_842, 0).saturating_mul(h.into()))
			// Standard Error: 21_692
			.saturating_add(Weight::from_parts(1_150_412, 0).saturating_mul(i.into()))
			// Standard Error: 21_692
			.saturating_add(Weight::from_parts(286_053, 0).saturating_mul(o.into()))
			// Standard Error: 101
			.saturating_add(Weight::from_parts(4_434, 0).saturating_mul(b.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Issue IssueRequests (r:1 w:1)
	/// Proof: Issue IssueRequests (max_values: None, max_size: Some(261), added: 2736, mode: MaxEncodedLen)
	/// Storage: Issue IssuePeriod (r:1 w:0)
	/// Proof: Issue IssuePeriod (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Security ActiveBlockCount (r:1 w:0)
	/// Proof: Security ActiveBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: BTCRelay BestBlockHeight (r:1 w:0)
	/// Proof: BTCRelay BestBlockHeight (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VaultRegistry Vaults (r:1 w:1)
	/// Proof: VaultRegistry Vaults (max_values: None, max_size: Some(260), added: 2735, mode: MaxEncodedLen)
	fn cancel_issue() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2583`
		//  Estimated: `6968`
		// Minimum execution time: 77_932_000 picoseconds.
		Weight::from_parts(80_682_000, 6968)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Issue IssuePeriod (r:0 w:1)
	/// Proof: Issue IssuePeriod (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_issue_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1027`
		//  Estimated: `0`
		// Minimum execution time: 21_773_000 picoseconds.
		Weight::from_parts(22_420_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}