
//! Autogenerated weights for pallet_proxy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-01, STEPS: `10`, REPEAT: `5`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `dev-benchmark`, CPU: `Intel(R) Xeon(R) CPU @ 2.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kintsugi-dev"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --chain
// kintsugi-dev
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 10
// --repeat
// 5
// --output
// ../tmp-weight/
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for pallet_proxy using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {

	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `199 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 43_285_000 picoseconds.
		Weight::from_parts(51_749_345, 4706)
			// Standard Error: 139_209
			.saturating_add(Weight::from_parts(59_060, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn proxy_announced	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771 + a * (68 ±0) + p * (37 ±0)`
		//  Estimated: `13984`
		// Minimum execution time: 96_664_000 picoseconds.
		Weight::from_parts(96_518_146, 13984)
			// Standard Error: 296_292
			.saturating_add(Weight::from_parts(613_771, 0).saturating_mul(a.into()))
			// Standard Error: 308_027
			.saturating_add(Weight::from_parts(615_093, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn remove_announcement	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686 + a * (68 ±0)`
		//  Estimated: `9278`
		// Minimum execution time: 60_530_000 picoseconds.
		Weight::from_parts(75_356_810, 9278)
			// Standard Error: 131_990
			.saturating_add(Weight::from_parts(313_573, 0).saturating_mul(a.into()))
			// Standard Error: 137_218
			.saturating_add(Weight::from_parts(117_104, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn reject_announcement	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686 + a * (68 ±0)`
		//  Estimated: `9278`
		// Minimum execution time: 62_012_000 picoseconds.
		Weight::from_parts(60_977_056, 9278)
			// Standard Error: 103_655
			.saturating_add(Weight::from_parts(779_786, 0).saturating_mul(a.into()))
			// Standard Error: 107_760
			.saturating_add(Weight::from_parts(112_620, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn announce	(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `703 + a * (68 ±0) + p * (37 ±0)`
		//  Estimated: `13984`
		// Minimum execution time: 92_849_000 picoseconds.
		Weight::from_parts(106_533_000, 13984)
			// Standard Error: 193_593
			.saturating_add(Weight::from_parts(591_256, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn add_proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 77_406_000 picoseconds.
		Weight::from_parts(88_311_642, 8286)
			// Standard Error: 193_967
			.saturating_add(Weight::from_parts(214_939, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 66_541_000 picoseconds.
		Weight::from_parts(85_388_503, 8286)
			// Standard Error: 342_627
			.saturating_add(Weight::from_parts(163_390, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxies	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 55_372_000 picoseconds.
		Weight::from_parts(58_621_689, 8286)
			// Standard Error: 92_955
			.saturating_add(Weight::from_parts(225_660, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn create_pure	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `530`
		//  Estimated: `8286`
		// Minimum execution time: 82_722_000 picoseconds.
		Weight::from_parts(93_914_270, 8286)
			// Standard Error: 213_707
			.saturating_add(Weight::from_parts(58_768, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 30]`.
	fn kill_pure	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `588 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 60_016_000 picoseconds.
		Weight::from_parts(69_480_664, 8286)
			// Standard Error: 162_392
			.saturating_add(Weight::from_parts(169_759, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}