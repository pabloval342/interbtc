
//! Autogenerated weights for pallet_proxy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-05, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `dev-benchmark`, CPU: `Intel(R) Xeon(R) CPU @ 2.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("interlay-dev"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --chain
// interlay-dev
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 50
// --repeat
// 10
// --output
// ../tmp-weight/
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for pallet_proxy using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {

	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `199 + p * (37 ±0)`
		//  Estimated: `4706`
		// Minimum execution time: 39_254_000 picoseconds.
		Weight::from_parts(41_395_129, 4706)
			// Standard Error: 16_886
			.saturating_add(Weight::from_parts(174_688, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn proxy_announced	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771 + a * (68 ±0) + p * (37 ±0)`
		//  Estimated: `13984`
		// Minimum execution time: 86_714_000 picoseconds.
		Weight::from_parts(86_967_835, 13984)
			// Standard Error: 35_642
			.saturating_add(Weight::from_parts(634_473, 0).saturating_mul(a.into()))
			// Standard Error: 36_875
			.saturating_add(Weight::from_parts(287_102, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn remove_announcement	(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686 + a * (68 ±0)`
		//  Estimated: `9278`
		// Minimum execution time: 57_027_000 picoseconds.
		Weight::from_parts(63_497_142, 9278)
			// Standard Error: 21_946
			.saturating_add(Weight::from_parts(472_425, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn reject_announcement	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686 + a * (68 ±0)`
		//  Estimated: `9278`
		// Minimum execution time: 57_322_000 picoseconds.
		Weight::from_parts(62_529_167, 9278)
			// Standard Error: 22_606
			.saturating_add(Weight::from_parts(487_003, 0).saturating_mul(a.into()))
			// Standard Error: 23_389
			.saturating_add(Weight::from_parts(34_848, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 31]`.
	fn announce	(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `703 + a * (68 ±0) + p * (37 ±0)`
		//  Estimated: `13984`
		// Minimum execution time: 82_431_000 picoseconds.
		Weight::from_parts(91_399_563, 13984)
			// Standard Error: 26_814
			.saturating_add(Weight::from_parts(465_023, 0).saturating_mul(a.into()))
			// Standard Error: 27_742
			.saturating_add(Weight::from_parts(58_518, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn add_proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 72_509_000 picoseconds.
		Weight::from_parts(76_255_771, 8286)
			// Standard Error: 24_340
			.saturating_add(Weight::from_parts(200_189, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxy	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 63_212_000 picoseconds.
		Weight::from_parts(68_993_645, 8286)
			// Standard Error: 23_840
			.saturating_add(Weight::from_parts(154_987, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn remove_proxies	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 51_896_000 picoseconds.
		Weight::from_parts(56_498_469, 8286)
			// Standard Error: 23_386
			.saturating_add(Weight::from_parts(71_334, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 31]`.
	fn create_pure	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `530`
		//  Estimated: `8286`
		// Minimum execution time: 77_205_000 picoseconds.
		Weight::from_parts(83_179_242, 8286)
			// Standard Error: 24_024
			.saturating_add(Weight::from_parts(52_026, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 30]`.
	fn kill_pure	(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `588 + p * (37 ±0)`
		//  Estimated: `8286`
		// Minimum execution time: 55_068_000 picoseconds.
		Weight::from_parts(58_455_185, 8286)
			// Standard Error: 21_996
			.saturating_add(Weight::from_parts(163_126, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}