
//! Autogenerated weights for oracle
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-13, STEPS: `100`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `sander-dell`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("interlay-testnet-latest"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --chain
// interlay-testnet-latest
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 100
// --repeat
// 10
// --output
// parachain/runtime/testnet-interlay/src/weights/
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for oracle using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> oracle::WeightInfo for WeightInfo<T> {
	/// Storage: Oracle RawValuesUpdated (r:1001 w:1000)
	/// Proof Skipped: Oracle RawValuesUpdated (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Oracle RawValues (r:2000 w:0)
	/// Proof Skipped: Oracle RawValues (max_values: None, max_size: None, mode: Measured)
	/// Storage: Oracle MaxDelay (r:1 w:0)
	/// Proof Skipped: Oracle MaxDelay (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VaultRewards TotalStake (r:1000 w:0)
	/// Proof Skipped: VaultRewards TotalStake (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:1)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:1000 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Security Errors (r:1 w:1)
	/// Proof Skipped: Security Errors (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Oracle Aggregate (r:0 w:1000)
	/// Proof Skipped: Oracle Aggregate (max_values: None, max_size: None, mode: Measured)
	/// Storage: Oracle ValidUntil (r:0 w:1000)
	/// Proof Skipped: Oracle ValidUntil (max_values: None, max_size: None, mode: Measured)
	/// The range of component `u` is `[1, 1000]`.
	fn on_initialize(u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1719 + u * (127 ±0)`
		//  Estimated: `19799 + u * (13518 ±0)`
		// Minimum execution time: 73_391_000 picoseconds.
		Weight::from_parts(74_046_000, 19799)
			// Standard Error: 59_986
			.saturating_add(Weight::from_parts(29_658_792, 0).saturating_mul(u.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(u.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(u.into())))
			.saturating_add(Weight::from_parts(0, 13518).saturating_mul(u.into()))
	}
	/// Storage: Oracle AuthorizedOracles (r:1 w:0)
	/// Proof Skipped: Oracle AuthorizedOracles (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Oracle RawValuesUpdated (r:0 w:1000)
	/// Proof Skipped: Oracle RawValuesUpdated (max_values: None, max_size: None, mode: Measured)
	/// Storage: Oracle RawValues (r:0 w:1000)
	/// Proof Skipped: Oracle RawValues (max_values: None, max_size: None, mode: Measured)
	/// The range of component `u` is `[1, 1000]`.
	fn feed_values(u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1283`
		//  Estimated: `6827`
		// Minimum execution time: 29_938_000 picoseconds.
		Weight::from_parts(30_632_000, 6827)
			// Standard Error: 7_807
			.saturating_add(Weight::from_parts(4_157_837, 0).saturating_mul(u.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(u.into())))
	}
	/// Storage: Oracle AuthorizedOracles (r:0 w:1)
	/// Proof Skipped: Oracle AuthorizedOracles (max_values: None, max_size: None, mode: Measured)
	fn insert_authorized_oracle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1019`
		//  Estimated: `1019`
		// Minimum execution time: 21_278_000 picoseconds.
		Weight::from_parts(22_024_000, 1019)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Oracle AuthorizedOracles (r:0 w:1)
	/// Proof Skipped: Oracle AuthorizedOracles (max_values: None, max_size: None, mode: Measured)
	fn remove_authorized_oracle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1019`
		//  Estimated: `1019`
		// Minimum execution time: 20_899_000 picoseconds.
		Weight::from_parts(21_979_000, 1019)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}