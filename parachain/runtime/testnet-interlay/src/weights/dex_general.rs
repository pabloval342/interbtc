
//! Autogenerated weights for dex_general
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-13, STEPS: `100`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `sander-dell`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("interlay-testnet-latest"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --chain
// interlay-testnet-latest
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 100
// --repeat
// 10
// --output
// parachain/runtime/testnet-interlay/src/weights/
// --template
// .deploy/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for dex_general using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> dex_general::WeightInfo for WeightInfo<T> {
	/// Storage: DexGeneral FeeMeta (r:1 w:1)
	/// Proof Skipped: DexGeneral FeeMeta (max_values: Some(1), max_size: None, mode: Measured)
	fn set_fee_receiver() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `787`
		//  Estimated: `1282`
		// Minimum execution time: 10_590_000 picoseconds.
		Weight::from_parts(10_965_000, 1282)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DexGeneral FeeMeta (r:1 w:1)
	/// Proof Skipped: DexGeneral FeeMeta (max_values: Some(1), max_size: None, mode: Measured)
	fn set_fee_point() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `787`
		//  Estimated: `1282`
		// Minimum execution time: 9_769_000 picoseconds.
		Weight::from_parts(10_113_000, 1282)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral LiquidityPairs (r:0 w:1)
	/// Proof Skipped: DexGeneral LiquidityPairs (max_values: None, max_size: None, mode: Measured)
	fn create_pair() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1022`
		//  Estimated: `4519`
		// Minimum execution time: 27_849_000 picoseconds.
		Weight::from_parts(29_256_000, 4519)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapLimits (r:0 w:1)
	/// Proof Skipped: DexGeneral BootstrapLimits (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapRewards (r:0 w:1)
	/// Proof Skipped: DexGeneral BootstrapRewards (max_values: None, max_size: None, mode: Measured)
	fn bootstrap_create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1022`
		//  Estimated: `5541`
		// Minimum execution time: 28_828_000 picoseconds.
		Weight::from_parts(30_114_000, 5541)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DexGeneral BootstrapLimits (r:1 w:0)
	/// Proof Skipped: DexGeneral BootstrapLimits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapPersonalSupply (r:1 w:1)
	/// Proof Skipped: DexGeneral BootstrapPersonalSupply (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn bootstrap_contribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2346`
		//  Estimated: `27426`
		// Minimum execution time: 98_943_000 picoseconds.
		Weight::from_parts(101_890_000, 27426)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:0)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapPersonalSupply (r:1 w:1)
	/// Proof Skipped: DexGeneral BootstrapPersonalSupply (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapEndStatus (r:1 w:0)
	/// Proof Skipped: DexGeneral BootstrapEndStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral LiquidityPairs (r:1 w:0)
	/// Proof Skipped: DexGeneral LiquidityPairs (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: DexGeneral BootstrapRewards (r:1 w:0)
	/// Proof Skipped: DexGeneral BootstrapRewards (max_values: None, max_size: None, mode: Measured)
	fn bootstrap_claim() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3588`
		//  Estimated: `38098`
		// Minimum execution time: 92_738_000 picoseconds.
		Weight::from_parts(95_371_000, 38098)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:5 w:5)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: DexGeneral LiquidityPairs (r:0 w:1)
	/// Proof Skipped: DexGeneral LiquidityPairs (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapEndStatus (r:0 w:1)
	/// Proof Skipped: DexGeneral BootstrapEndStatus (max_values: None, max_size: None, mode: Measured)
	fn bootstrap_end() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2419`
		//  Estimated: `30398`
		// Minimum execution time: 111_687_000 picoseconds.
		Weight::from_parts(114_575_000, 30398)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapRewards (r:1 w:1)
	/// Proof Skipped: DexGeneral BootstrapRewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapLimits (r:0 w:1)
	/// Proof Skipped: DexGeneral BootstrapLimits (max_values: None, max_size: None, mode: Measured)
	fn bootstrap_update() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1328`
		//  Estimated: `8934`
		// Minimum execution time: 34_319_000 picoseconds.
		Weight::from_parts(34_765_000, 8934)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral BootstrapPersonalSupply (r:1 w:1)
	/// Proof Skipped: DexGeneral BootstrapPersonalSupply (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn bootstrap_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2642`
		//  Estimated: `23197`
		// Minimum execution time: 74_336_000 picoseconds.
		Weight::from_parts(78_032_000, 23197)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:5 w:5)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: DexGeneral LiquidityPairs (r:1 w:0)
	/// Proof Skipped: DexGeneral LiquidityPairs (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral KLast (r:1 w:1)
	/// Proof Skipped: DexGeneral KLast (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral FeeMeta (r:1 w:0)
	/// Proof Skipped: DexGeneral FeeMeta (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_liquidity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2440`
		//  Estimated: `35743`
		// Minimum execution time: 126_515_000 picoseconds.
		Weight::from_parts(130_615_000, 35743)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: DexGeneral PairStatuses (r:1 w:1)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:5 w:5)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: DexGeneral LiquidityPairs (r:1 w:0)
	/// Proof Skipped: DexGeneral LiquidityPairs (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral KLast (r:1 w:1)
	/// Proof Skipped: DexGeneral KLast (max_values: None, max_size: None, mode: Measured)
	/// Storage: DexGeneral FeeMeta (r:1 w:0)
	/// Proof Skipped: DexGeneral FeeMeta (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn remove_liquidity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2877`
		//  Estimated: `37491`
		// Minimum execution time: 114_576_000 picoseconds.
		Weight::from_parts(121_595_000, 37491)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Tokens Accounts (r:6 w:6)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: DexGeneral PairStatuses (r:2 w:0)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn swap_exact_assets_for_assets() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3249`
		//  Estimated: `28945`
		// Minimum execution time: 125_773_000 picoseconds.
		Weight::from_parts(128_810_000, 28945)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: Tokens Accounts (r:6 w:6)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: DexGeneral PairStatuses (r:2 w:0)
	/// Proof Skipped: DexGeneral PairStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn swap_assets_for_exact_assets() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3249`
		//  Estimated: `28945`
		// Minimum execution time: 121_837_000 picoseconds.
		Weight::from_parts(126_125_000, 28945)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
}