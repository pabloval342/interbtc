# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "registry.gitlab.com/interlay/btc-parachain:ci"

variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
    RUSTC_WRAPPER: sccache
    SCCACHE_GCS_RW_MODE: READ_WRITE

before_script:
    - rustc --version
    - rustfmt --version
    - cargo --version
    - SCCACHE_START_SERVER=1 SCCACHE_NO_DAEMON=1 sccache &
    - sccache -s

after_script:
    - sccache -s

# Declare stages
stages:
    - build # for crates and pallets
    - test # for tests in dev
    - deploy # for deployment in master

# # master branch
# btc-parachain-test:
#   stage: deploy
#   image: rustlang/rust:nightly
#   script:
#     - cd parachain
#     - ./scripts/init.sh
#     - cargo test --all --verbose
#   only:
#     - master

# btc-parachain-build:
#   stage: test
#   image: rustlang/rust:nightly
#   script:
#     - cd parachain
#     - ./scripts/init.sh
#     - cargo build --release --verbose
#   only:
#     - dev

# # merge requests
# btc-parachain-build:
#   stage: test
#   image: rustlang/rust:nightly
#   script:
#     - cd parachain
#     - ./scripts/init.sh
#     - cargo build --release --verbose
#   only:
#     - merge_requests

# btc-parachain-test:
#   stage: test
#   image: rustlang/rust:nightly
#   script:
#     - cd parachain
#     - ./scripts/init.sh
#     - cargo test --all --verbose
#   only:
#     - merge_requests

# pallets and crates
test-pallets-and-crates:
    stage: test
    script:
        - cargo build --release --verbose
        - cargo fmt -- --check
        - cargo test --all --release
    cache:
        key: cargo
        paths:
            - .cargo
    only:
        - merge_requests

docker-publish:
    stage: deploy
    image: docker:19.03.8
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: "/certs"
    services:
        - docker:19.03.8-dind
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    only:
        - master
