
//! Autogenerated weights for supply
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-12, STEPS: `100`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `interlay-hetzner-01`, CPU: `AMD EPYC 7502P 32-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kintsugi-testnet-latest"), DB CACHE: 1024

// Executed Command:
// target/release/interbtc-parachain
// benchmark
// pallet
// --chain
// kintsugi-testnet-latest
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// supply
// --extrinsic
// *
// --steps
// 100
// --repeat
// 10
// --output
// ./crates/supply/src/default_weights.rs
// --template
// .deploy/weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for supply.
pub trait WeightInfo {
	fn set_start_height_and_inflation() -> Weight;
}

/// Weights for supply using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Supply StartHeight (r:0 w:1)
	/// Proof Skipped: Supply StartHeight (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Supply Inflation (r:0 w:1)
	/// Proof Skipped: Supply Inflation (max_values: Some(1), max_size: None, mode: Measured)
	fn set_start_height_and_inflation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `1422`
		// Minimum execution time: 12_014_000 picoseconds.
		Weight::from_parts(12_314_000, 1422)
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Supply StartHeight (r:0 w:1)
	/// Proof Skipped: Supply StartHeight (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Supply Inflation (r:0 w:1)
	/// Proof Skipped: Supply Inflation (max_values: Some(1), max_size: None, mode: Measured)
	fn set_start_height_and_inflation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `1422`
		// Minimum execution time: 12_014_000 picoseconds.
		Weight::from_parts(12_314_000, 1422)
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
