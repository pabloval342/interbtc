//! Autogenerated weights for btc_relay
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-02-23, STEPS: \[100, \], REPEAT: 10, LOW RANGE: \[\], HIGH RANGE: \[\]
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ../target/release/btc-parachain
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// btc_relay
// --extrinsic
// *
// --steps
// 100
// --repeat
// 10
// --output
// ../crates/btc-relay/src/weights.rs
// --template
// ../.deploy/weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions needed for btc_relay.
pub trait WeightInfo {
    fn verify_and_validate_transaction() -> Weight;
    fn verify_transaction_inclusion() -> Weight;
    fn validate_transaction() -> Weight;
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn verify_and_validate_transaction() -> Weight {
        99_474_000_u64.saturating_add(RocksDbWeight::get().reads(9_u64))
    }
    fn verify_transaction_inclusion() -> Weight {
        55_622_000_u64.saturating_add(RocksDbWeight::get().reads(8_u64))
    }
    fn validate_transaction() -> Weight {
        15_739_000_u64.saturating_add(RocksDbWeight::get().reads(1_u64))
    }
}
