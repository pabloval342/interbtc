name: Cargo build

permissions:
  contents: read

on: [pull_request]

jobs:
  build:
    name: Test Suite
    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Install System Dependencies
        run: |
            sudo apt-get update && sudo apt-get install -y \
            cmake pkg-config libssl-dev git clang curl libc6-dev
      - name: Update version in Cargo.toml
        run: |
          find ./ -name Cargo.toml -exec ./scripts/update_cargo_version.sh {} \;

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-10-12
      - run: rustup component add rustfmt

      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --workspace

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --workspace

      - name: build interbtc-standalone
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin interbtc-standalone
      - uses: actions/upload-artifact@v2
        with:
          name: interbtc-standalone
          path: target/release/interbtc-standalone

      - name: build interbtc-parachain
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin interbtc-parachain

      - uses: actions/upload-artifact@v2
        with:
          name: interbtc-parachain
          path: target/release/interbtc-parachain

  build_docker:
    runs-on: [self-hosted, linux]
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          TS=$(date +%s)
          echo ::set-output name=branch_name::$(echo ${GITHUB_REF##*/})
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=ts::${TS}

      - name: Setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta for standalone
        id: meta_standalone
        uses: docker/metadata-action@v3
        with:
          images: docker.io/interlayhq/interbtc
          tags: |
            type=sha,prefix=interbtc-standalone-${{ steps.prep.outputs.branch_name }}-,suffix=-${{ steps.prep.outputs.ts }}
            type=ref,prefix=interbtc-standalone-,event=branch
            type=ref,prefix=interbtc-standalone-,event=tag

      - name: Docker meta for parachain
        id: meta_parachain
        uses: docker/metadata-action@v3
        with:
          images: docker.io/interlayhq/interbtc
          tags: |
            type=sha,prefix=interbtc-parachain-${{ steps.prep.outputs.branch_name }}-,suffix=-${{ steps.prep.outputs.ts }}
            type=ref,prefix=interbtc-parachain-,event=branch
            type=ref,prefix=interbtc-parachain-,event=tag

      - uses: actions/download-artifact@v2
        with:
          name: interbtc-standalone
          path: target/release/

      - name: Build and push standalone
        id: docker_build_standalone
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: ./Dockerfile_release
          build-args: BINARY=interbtc-standalone
          tags: ${{ steps.meta_standalone.outputs.tags }}
          labels: ${{ steps.meta_standalone.outputs.labels }}
          platforms: linux/amd64

      - uses: actions/download-artifact@v2
        with:
          name: interbtc-parachain
          path: ./target/release/

      - name: Build and push parachain
        id: docker_build_parachain
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: ./Dockerfile_release
          build-args: BINARY=interbtc-parachain
          tags: ${{ steps.meta_parachain.outputs.tags }}
          labels: ${{ steps.meta_parachain.outputs.labels }}
          platforms: linux/amd64